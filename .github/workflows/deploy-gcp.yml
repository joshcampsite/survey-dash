# .github/workflows/deploy-gcp.yml

name: Deploy Dash App to Cloud Run via WIF

on:
  push:
    branches:
      - main # Or your default branch

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  CLOUD_RUN_SERVICE_NAME: ${{ secrets.CLOUD_RUN_SERVICE_NAME }}
  ARTIFACT_REGISTRY_REPO: ${{ secrets.ARTIFACT_REGISTRY_REPO }}
  # Full image path: <region>-docker.pkg.dev/<project-id>/<repo-name>/<service-name>
  IMAGE_PATH: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPO }}/${{ secrets.CLOUD_RUN_SERVICE_NAME }}

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for OIDC token generation

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # --- Modified Auth Step ---
    # Kept v2, but added token_format to output an access_token
    - name: Authenticate to Google Cloud (WIF)
      id: 'auth' # We need the id to reference outputs
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
        service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'
        token_format: 'access_token' # Request an access token output

    # --- Added Docker Login Step ---
    # Uses the access token from the previous step to explicitly login
    - name: Login to Google Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GCP_REGION }}-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }} # Use the output token

    # --- Removed gcloud auth configure-docker step ---
    # --- Removed cat ~/.docker/config.json step ---

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'
      # Note: setup-gcloud should still pick up ADC implicitly set by auth action for gcloud commands

    - name: Build Docker image
      run: docker build -t ${{ env.IMAGE_PATH }}:${{ github.sha }} -t ${{ env.IMAGE_PATH }}:latest .

    - name: Push Docker image to Artifact Registry
      # This push should now work because docker/login-action authenticated successfully
      run: docker push ${{ env.IMAGE_PATH }} --all-tags

    - name: Deploy to Cloud Run
      id: deploy
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
        region: ${{ env.GCP_REGION }}
        image: ${{ env.IMAGE_PATH }}:${{ github.sha }}
        flags: '--allow-unauthenticated'
        # Note: deploy-cloudrun uses gcloud which should use ADC set by the auth action

    - name: Show Cloud Run Service URL
      if: steps.deploy.outputs.url
      run: echo "Deployed successfully to:${{ steps.deploy.outputs.url }}"
